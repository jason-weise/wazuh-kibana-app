{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-16T17:25:29.707Z",
    "end": "2022-06-16T17:28:54.471Z",
    "duration": 204764,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dfa1df19-b507-4b4b-991f-2630cea7a15c",
      "title": "",
      "fullFile": "cypress/integration/features/filters/add-filter-from-agent.feature",
      "file": "cypress/integration/features/filters/add-filter-from-agent.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e337caf9-451e-4ca5-9e04-d259bced168c",
          "title": "Validate that the pinned filter label is displayed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "The user add and pin filter - Check across the modules Security Events (example #1)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules Security Events (example #1)",
              "timedOut": null,
              "duration": 40203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56284fdc-a4b0-484b-a1e8-6cc56512a29c",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules Integrity Monitoring (example #2)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules Integrity Monitoring (example #2)",
              "timedOut": null,
              "duration": 19363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28d1e99f-65ce-4533-a5e3-de65b52a36e3",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules System Auditing (example #3)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules System Auditing (example #3)",
              "timedOut": null,
              "duration": 16386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4c8da46-95ca-406b-9efe-2da5a6bf328c",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules Mitre & Attack (example #4)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules Mitre & Attack (example #4)",
              "timedOut": null,
              "duration": 19195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a9d81d33-e006-48dc-87cd-01a26746e14b",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules GDPR (example #5)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules GDPR (example #5)",
              "timedOut": null,
              "duration": 18143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "30ebf58d-abc3-4c2a-87f4-810654466b93",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules HIPAA (example #6)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules HIPAA (example #6)",
              "timedOut": null,
              "duration": 18971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ec143601-0c2c-4fb6-817e-0a225d0a590f",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules NIST (example #7)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules NIST (example #7)",
              "timedOut": null,
              "duration": 19569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a2745aa-5f42-4bf1-9d28-88f5783b7332",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules TSC (example #8)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules TSC (example #8)",
              "timedOut": null,
              "duration": 18966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "30307436-3bad-4541-a016-f234c99a2463",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules Policy Monitoring (example #9)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules Policy Monitoring (example #9)",
              "timedOut": null,
              "duration": 16223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cd7db1a1-e5e8-474b-8bd6-349352de270d",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules PCIDSS (example #10)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules PCIDSS (example #10)",
              "timedOut": null,
              "duration": 17040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1aa66a7b-d67b-42af-9385-879d6f0e5eb7",
              "parentUUID": "e337caf9-451e-4ca5-9e04-d259bced168c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56284fdc-a4b0-484b-a1e8-6cc56512a29c",
            "28d1e99f-65ce-4533-a5e3-de65b52a36e3",
            "f4c8da46-95ca-406b-9efe-2da5a6bf328c",
            "a9d81d33-e006-48dc-87cd-01a26746e14b",
            "30ebf58d-abc3-4c2a-87f4-810654466b93",
            "ec143601-0c2c-4fb6-817e-0a225d0a590f",
            "1a2745aa-5f42-4bf1-9d28-88f5783b7332",
            "30307436-3bad-4541-a016-f234c99a2463",
            "cd7db1a1-e5e8-474b-8bd6-349352de270d",
            "1aa66a7b-d67b-42af-9385-879d6f0e5eb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 204059,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report",
        "mochaFile": "cypress/report/output.html"
      },
      "version": "6.2.0"
    }
  }
}