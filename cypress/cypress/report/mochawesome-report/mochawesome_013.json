{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-16T17:21:28.222Z",
    "end": "2022-06-16T17:25:07.183Z",
    "duration": 218961,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0f69cf4-7450-41f4-b8fb-5100769d271b",
      "title": "",
      "fullFile": "cypress/integration/features/filters/add-filter-from-agent-events.feature",
      "file": "cypress/integration/features/filters/add-filter-from-agent-events.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f729891b-3b98-4540-8b36-b44dc312003e",
          "title": "Validate that the pinned filter label is displayed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "The user add and pin filter - Check across the modules - from event page - Security Events (example #1)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - Security Events (example #1)",
              "timedOut": null,
              "duration": 39351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b1644a53-45d9-405b-b585-d7e82e1a9b99",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - Integrity Monitoring (example #2)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - Integrity Monitoring (example #2)",
              "timedOut": null,
              "duration": 20719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "07a0c593-306d-4f6d-ac62-91ce62fcee9d",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - System Auditing (example #3)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - System Auditing (example #3)",
              "timedOut": null,
              "duration": 18718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2f8b01d4-7102-48c6-96e5-5cac56ffcbff",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - Mitre & Attack (example #4)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - Mitre & Attack (example #4)",
              "timedOut": null,
              "duration": 20976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f8a48a06-9cf0-4f11-869f-5bd7153cfb3d",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - GDPR (example #5)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - GDPR (example #5)",
              "timedOut": null,
              "duration": 18974,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c3edff2-d8f3-4992-9680-a3f327921452",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - HIPAA (example #6)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - HIPAA (example #6)",
              "timedOut": null,
              "duration": 21404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a616e449-e0b8-4d3d-992f-02800bf5d98c",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - NIST (example #7)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - NIST (example #7)",
              "timedOut": null,
              "duration": 20004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2dde27a9-397a-4e96-98f7-ee4971a194ad",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - TSC (example #8)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - TSC (example #8)",
              "timedOut": null,
              "duration": 18617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f745b8d1-b02f-426a-8ded-4bdadf39f4ac",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - Policy Monitoring (example #9)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - Policy Monitoring (example #9)",
              "timedOut": null,
              "duration": 20156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "55bf76af-d04b-45b0-ab35-8e5647f06ab4",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "The user add and pin filter - Check across the modules - from event page - PCIDSS (example #10)",
              "fullTitle": "Validate that the pinned filter label is displayed The user add and pin filter - Check across the modules - from event page - PCIDSS (example #10)",
              "timedOut": null,
              "duration": 19344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1331c380-182f-4670-bb2d-28e357434309",
              "parentUUID": "f729891b-3b98-4540-8b36-b44dc312003e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1644a53-45d9-405b-b585-d7e82e1a9b99",
            "07a0c593-306d-4f6d-ac62-91ce62fcee9d",
            "2f8b01d4-7102-48c6-96e5-5cac56ffcbff",
            "f8a48a06-9cf0-4f11-869f-5bd7153cfb3d",
            "4c3edff2-d8f3-4992-9680-a3f327921452",
            "a616e449-e0b8-4d3d-992f-02800bf5d98c",
            "2dde27a9-397a-4e96-98f7-ee4971a194ad",
            "f745b8d1-b02f-426a-8ded-4bdadf39f4ac",
            "55bf76af-d04b-45b0-ab35-8e5647f06ab4",
            "1331c380-182f-4670-bb2d-28e357434309"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 218263,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": true,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report",
        "mochaFile": "cypress/report/output.html"
      },
      "version": "6.2.0"
    }
  }
}